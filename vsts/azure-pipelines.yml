# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  batch: true
  branches:
    include:
      - main
  paths:
    include:
      - vsts/*

pool:
  vmImage: 'ubuntu-latest'

steps:
- script: cat /etc/*release
  name: aws_download_cli
  displayName: 'aws_download_cli'

- script: |
    curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
    unzip awscliv2.zip
    sudo ./aws/install
    pip install awscli
  displayName: 'Run a multi-line script'

- task: AWSShellScript@1
  name: aws_assume_role
  displayName: aws_assume_role
  inputs:
    awsCredentials: 'sc-test'
    regionName: 'us-east-1'
    scriptType: 'inline'
    inlineScript: |
      aws sts get-caller-identity
      aws sts assume-role --role-arn arn:aws:iam::772967566311:role/aws-reserved/sso.amazonaws.com/AWSReservedSSO_AdministratorAccess_5e46d932740a76d9 --role-session-name vsts
      aws sts assume-role --role-arn arn:aws:iam::772967566311:role/lambda-role --role-session-name vsts

- task: SSH@0
  name: kubernets_nginx
  displayName: kubernets_nginx
  inputs:
    sshEndpoint: 'sc-ssh'
    runOptions: 'inline'
    inline: |
      kubectl apply -f /home/ec2-user/bancolombia/k3s/hello-nginx.yaml      
      kubectl get po -owide |grep nginx
      ls;pwd
    readyTimeout: '20000'
